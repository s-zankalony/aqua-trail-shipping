// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id        String   @id @default(uuid()) @map("_id")
  name      String
  email     String
  phone     String
  address   String
  country   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  SeaFreightBooking SeaFreightBooking[]
}

enum ContainerSize {
  TWENTY_FT  @map("20ft")
  FORTY_FT   @map("40ft")
}

enum containerType {
  DRY
  REEFER
  OPEN_TOP
  FLAT_RACK
  TANK
  ISO_TANK
  HIGH_CUBE
  OPEN_SIDE
  DOUBLE_DOOR
  BULK
  VENTILATED
  INSULATED
  HANGING
  PLATFORM
  OTHER
}

model SeaFreightBooking {
  id        String   @id @default(uuid()) @map("_id")
  customer  Customer @relation(fields: [customerId], references: [id])
  customerId String
  containerType containerType
  containerSize ContainerSize
  containerQuantity Int
  commodity String
  dg Boolean
  dgData DgData[]
  reefer Boolean
  reeferData ReeferData[]
  oog Boolean
  oogData OOG[]
  origin String
  destination String
  pol String
  pod String
  etd DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DgData {
  id        String   @id @default(uuid()) @map("_id")
  bookingId String
  unNumber String
  class String
  packingGroup String
  flashPoint String
  marinePollutant Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  SeaFreightBooking SeaFreightBooking @relation(fields: [bookingId], references: [id])
	@@map("dgData")
}

model ReeferData {
  id        String   @id @default(uuid()) @map("_id")
  bookingId String
  temperature String
  ventilation String
  humidity String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  SeaFreightBooking SeaFreightBooking @relation(fields: [bookingId], references: [id])
}

model OOG {
  id        String   @id @default(uuid()) @map("_id")
  bookingId String
  length String
  width String
  height String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  SeaFreightBooking SeaFreightBooking @relation(fields: [bookingId], references: [id])
}